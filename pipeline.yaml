resources:
- name: ci
  type: git
  source:
    uri: git@github.com:SUSE/scf-eirini-ci.git
    private_key: {{github-private-key}}
- name: git.scf
  type: git
  source:
    uri: git@github.com:SUSE/scf.git
    private_key: {{github-private-key}}
    branch: develop
- name: git.diego-ssh
  type: git
  source:
    uri: git@github.com:cloudfoundry/diego-ssh.git
    private_key: {{github-private-key}}
- name: git.eirinifs
  type: git
  source:
    uri: git@github.com:SUSE/eirinifs.git
    private_key: {{github-private-key}}
- name: git.eirinifs-launchers
  type: git
  source:
    uri: git@github.com:SUSE/eirinifs.git
    private_key: {{github-private-key}}
    paths:
      - launcher.go
      - go.*
      - launchcmd/*
- name: git.eirini-staging
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/eirini-staging.git
    private_key: {{github-private-key}}
- name: docker-image.downloader-image
  type: docker-image
  source:
    repository: ((docker-public-staging-registry))/((docker-public-staging-org))/recipe-downloader
    username: ((docker-public-staging-username))
    password: ((docker-public-staging-password))
- name: docker-image.uploader-image
  type: docker-image
  source:
    repository: ((docker-public-staging-registry))/((docker-public-staging-org))/recipe-uploader
    username: ((docker-public-staging-username))
    password: ((docker-public-staging-password))
- name: docker-image.executor-image
  type: docker-image
  source:
    repository: ((docker-public-staging-registry))/((docker-public-staging-org))/recipe-executor
    username: ((docker-public-staging-username))
    password: ((docker-public-staging-password))
- name: s3.sshd
  type: s3
  source:
    bucket: suse-eirini-bits
    region_name: eu-central-1
    regexp: sshd-(.*)
    access_key_id: ((aws-capbot-access-key))
    secret_access_key: ((aws-capbot-secret-key))
- name: s3.launch
  type: s3
  source:
    bucket: suse-eirini-bits
    region_name: eu-central-1
    regexp: launch-(.*)
    access_key_id: ((aws-capbot-access-key))
    secret_access_key: ((aws-capbot-secret-key))
- name: s3.launcher
  type: s3
  source:
    bucket: suse-eirini-bits
    region_name: eu-central-1
    regexp: launcher-(.*)
    access_key_id: ((aws-capbot-access-key))
    secret_access_key: ((aws-capbot-secret-key))
- name: s3.eirinifs-sle15
  type: s3
  source:
    bucket: suse-eirini-bits
    region_name: eu-central-1
    regexp: eirinifs-sle15-v(.*).tar
    access_key_id: ((aws-capbot-access-key))
    secret_access_key: ((aws-capbot-secret-key))
- name: semver.downloader-image
  type: semver
  source:
    driver: s3
    initial_version: 0.3.0
    bucket: suse-eirini-bits
    key: version-eirini-downloader-image
    access_key_id: ((aws-capbot-access-key))
    secret_access_key: ((aws-capbot-secret-key))
    region_name: eu-central-1
- name: semver.executor-image
  type: semver
  source:
    driver: s3
    initial_version: 0.3.0
    bucket: suse-eirini-bits
    key: version-eirini-executor-image
    access_key_id: ((aws-capbot-access-key))
    secret_access_key: ((aws-capbot-secret-key))
    region_name: eu-central-1
- name: semver.uploader-image
  type: semver
  source:
    driver: s3
    initial_version: 0.3.0
    bucket: suse-eirini-bits
    key: version-eirini-uploader-image
    access_key_id: ((aws-capbot-access-key))
    secret_access_key: ((aws-capbot-secret-key))
    region_name: eu-central-1
- name: semver.eirinifs-sle15
  type: semver
  source:
    driver: s3
    bucket: suse-eirini-bits
    key: version-eirinifs-sle15
    access_key_id: ((aws-capbot-access-key))
    secret_access_key: ((aws-capbot-secret-key))
    region_name: eu-central-1
- name: semver.sshd
  type: semver
  source:
    driver: s3
    bucket: suse-eirini-bits
    key: version-sshd
    access_key_id: ((aws-capbot-access-key))
    secret_access_key: ((aws-capbot-secret-key))
    region_name: eu-central-1
- name: semver.launchers
  type: semver
  source:
    driver: s3
    bucket: suse-eirini-bits
    key: version-launchers
    access_key_id: ((aws-capbot-access-key))
    secret_access_key: ((aws-capbot-secret-key))
    region_name: eu-central-1
- name: github-release.sle15-release
  type: github-release
  source:
    owner: SUSE
    repository: cf-sle15-release
    access_token: ((github-access-token))
jobs:
  - name: build-sshd
    plan:
    - in_parallel:
      - get: git.diego-ssh
        trigger: true
      - get: semver.sshd
        params: {bump: minor}
    - task: build-sshd
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: golang
            tag: 1.14
        inputs:
          - name: git.diego-ssh
          - name: semver.sshd
        outputs:
          - name: diego-ssh-build
        run:
          path: bash
          args:
          - -exc
          - |
            mkdir -p $GOPATH/src/code.cloudfoundry.org/
            ln -s $PWD/git.diego-ssh $GOPATH/src/code.cloudfoundry.org/diego-ssh
            pushd $GOPATH/src/code.cloudfoundry.org/diego-ssh/cmd/sshd

            # Fix the incompatibility of the sftp library by checking out a compatible commit (no dependency management in diego-ssh ?!)
            go get -d

            go build
            popd
            mv $GOPATH/src/code.cloudfoundry.org/diego-ssh/cmd/sshd/sshd diego-ssh-build/sshd-$(cat semver.sshd/version)
    - put: semver.sshd
      params:
        file: semver.sshd/version
    - put: s3.sshd
      params:
        file: diego-ssh-build/sshd-*
        acl: public-read
  - name: build-launchers
    plan:
    - in_parallel:
      - get: semver.launchers
        params: {bump: minor}
      - get: git.eirinifs
      - get: git.eirinifs-launchers
        trigger: true
    - task: build-binaries
      input_mapping:
        eirinifs: git.eirinifs
      privileged: true
      file: git.eirinifs/ci/build-binaries/task.yml
    - task: rename-binaries
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: splatform/bosh-cli
            tag: ffdc518965675023196dd8cf511e3680484c3ed0
        inputs:
          - name: binaries
          - name: semver.launchers
        outputs:
          - name: binaries
        run:
          path: bash
          args:
          - -exc
          - |
            mv binaries/launch binaries/launch-$(cat semver.launchers/version)
            mv binaries/launcher binaries/launcher-$(cat semver.launchers/version)
    - put: semver.launchers
      params:
        file: semver.launchers/version
    - put: s3.launch
      params:
        file: binaries/launch-*
        acl: public-read
    - put: s3.launcher
      params:
        file: binaries/launcher-*
        acl: public-read
  - name: build-eirinifs-sle15
    plan:
    - in_parallel:
      - get: s3.launch
        trigger: true
        passed: [ build-launchers ]
      - get: s3.launcher
        trigger: true
        passed: [ build-launchers ]
      - get: s3.sshd
        trigger: true
        passed: [ build-sshd ]
      - get: git.eirinifs
      - get: github-release.sle15-release
        trigger: true
      - get: semver.eirinifs-sle15
        params: {bump: minor}
    - task: copy_binaries
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: splatform/bosh-cli
            tag: ffdc518965675023196dd8cf511e3680484c3ed0
        inputs:
          - name: s3.launcher
          - name: s3.launch
          - name: s3.sshd
        outputs:
          - name: binaries
        run:
          path: bash
          args:
          - -exc
          - |
            cp s3.launcher/launcher-* binaries/launcher
            cp s3.launch/launch-* binaries/launch
            cp s3.sshd/sshd-* binaries/sshd
            chmod +x binaries/*
    - task: build-eirinifs-sle15
      privileged: true
      input_mapping:
        eirinifs: git.eirinifs
        sle15-release: github-release.sle15-release
      file: git.eirinifs/ci/build-sle15/task.yml
    - task: copy-eirinifs-sle15-file
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: splatform/bosh-cli
            tag: ffdc518965675023196dd8cf511e3680484c3ed0
        inputs:
          - name: go/src/github.com/cloudfoundry-incubator/eirinifs/image/
          - name: semver.eirinifs-sle15
        outputs:
          - name: eirinifs-sle15-output
        run:
          path: bash
          args:
          - -exc
          - |
            cp go/src/github.com/cloudfoundry-incubator/eirinifs/image/sle15.tar eirinifs-sle15-output/eirinifs-sle15-v$(cat semver.eirinifs-sle15/version).tar
    - put: semver.eirinifs-sle15
      params:
        file: semver.eirinifs-sle15/version
    - put: s3.eirinifs-sle15
      params:
        file: eirinifs-sle15-output/eirinifs-sle15-v*.tar
        acl: public-read
  - name: build-downloader-image
    plan:
    - get: git.eirini-staging
      trigger: true
    - get: github-release.sle15-release
      trigger: true
    - get: semver.downloader-image
      params: {bump: minor}
    - task: get-image-labels-from-git
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: splatform/bosh-cli
            tag: ffdc518965675023196dd8cf511e3680484c3ed0
        inputs:
          - name: git.eirini-staging
        outputs:
          - name: image_labels
        run:
          path: bash
          args:
          - -exc
          - |
            pushd git.eirini-staging
            echo "{ \"commit\": \"$(git rev-parse HEAD)\", \"timestamp\": \"$(date +"%s")\" }" > ../image_labels/labels
            echo "{ \"baseimage\": \"registry.opensuse.org/cloud/platform/stack/rootfs/images/sle15:latest\", \"GIT_SHA\": \"$(git rev-parse HEAD)\" }" > ../image_labels/build_args
            popd
    - put: docker-image.downloader-image
      params:
        build_args_file: image_labels/build_args
        build: git.eirini-staging
        dockerfile: git.eirini-staging/image/downloader/Dockerfile
        tag_file: semver.downloader-image/version
        labels_file: image_labels/labels
        tag_as_latest: true
    - put: semver.downloader-image
      params:
        file: semver.downloader-image/version
  - name: create-downloader-pr
    plan:
    - in_parallel:
      - get: semver.downloader-image
        trigger: true
        passed: [ build-downloader-image ]
      - get: docker-image.downloader-image
      - get: git.scf
        params:
          submodules: none
      - get: ci
    - task: create-scf-pr
      input_mapping: { semver: semver.downloader-image, docker_image: docker-image.downloader-image }
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: splatform/concourse-brats
        inputs:
          - name: semver
          - name: docker_image
          - name: ci
          - name: git.scf
        params:
          GITHUB_TOKEN: ((github-access-token))
          GITHUB_PRIVATE_KEY: |
            {{github-private-key}}
          GIT_MAIL: {{github-username}}
          GIT_USER: suse-cf-ci-bot
          IMAGE_TO_REPLACE: recipe-downloader
        run:
          path: ci/tasks/create-pr.sh
  - name: build-executor-image
    plan:
    - in_parallel:
      - get: git.eirini-staging
        trigger: true
      - get: github-release.sle15-release
        trigger: true
      - get: semver.executor-image
        params: {bump: minor}
      - get: git.scf
        params:
          submodules: none
      - get: ci
    - task: get-image-labels-from-git
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: splatform/bosh-cli
            tag: ffdc518965675023196dd8cf511e3680484c3ed0
        inputs:
          - name: git.eirini-staging
        outputs:
          - name: image_labels
        run:
          path: bash
          args:
          - -exc
          - |
            pushd git.eirini-staging
            echo "{ \"commit\": \"$(git rev-parse HEAD)\", \"timestamp\": \"$(date +"%s")\" }" > ../image_labels/labels
            echo "{ \"baseimage\": \"registry.opensuse.org/cloud/platform/stack/rootfs/images/sle15:latest\", \"GIT_SHA\": \"$(git rev-parse HEAD)\" }" > ../image_labels/build_args
            popd
    - put: docker-image.executor-image
      params:
        build_args_file: image_labels/build_args
        build: git.eirini-staging
        dockerfile: git.eirini-staging/image/executor/Dockerfile
        labels_file: image_labels/labels
        tag_as_latest: true
        tag_file: semver.executor-image/version
    - put: semver.executor-image
      params:
        file: semver.executor-image/version
  - name: create-executor-pr
    plan:
    - in_parallel:
      - get: semver.executor-image
        trigger: true
        passed: [ build-executor-image ]
      - get: docker-image.executor-image
      - get: git.scf
        params:
          submodules: none
      - get: ci
    - task: create-scf-pr
      input_mapping: { semver: semver.executor-image, docker_image: docker-image.executor-image }
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: splatform/concourse-brats
        inputs:
          - name: semver
          - name: docker_image
          - name: ci
          - name: git.scf
        params:
          GITHUB_TOKEN: ((github-access-token))
          GITHUB_PRIVATE_KEY: |
            {{github-private-key}}
          GIT_MAIL: {{github-username}}
          GIT_USER: suse-cf-ci-bot
          IMAGE_TO_REPLACE: recipe-executor
        run:
          path: ci/tasks/create-pr.sh
  - name: build-uploader-image
    plan:
    - get: git.eirini-staging
      trigger: true
    - get: github-release.sle15-release
      trigger: true
    - get: semver.uploader-image
      params: {bump: minor}
    - task: get-image-labels-from-git
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: splatform/bosh-cli
            tag: ffdc518965675023196dd8cf511e3680484c3ed0
        inputs:
          - name: git.eirini-staging
        outputs:
          - name: image_labels
        run:
          path: bash
          args:
          - -exc
          - |
            pushd git.eirini-staging
            echo "{ \"commit\": \"$(git rev-parse HEAD)\", \"timestamp\": \"$(date +"%s")\" }" > ../image_labels/labels
            echo "{ \"baseimage\": \"registry.opensuse.org/cloud/platform/stack/rootfs/images/sle15:latest\", \"GIT_SHA\": \"$(git rev-parse HEAD)\" }" > ../image_labels/build_args
            popd
    - put: docker-image.uploader-image
      params:
        build_args_file: image_labels/build_args
        build: git.eirini-staging
        dockerfile: git.eirini-staging/image/uploader/Dockerfile
        labels_file: image_labels/labels
        tag_file: semver.uploader-image/version
        tag_as_latest: true
    - put: semver.uploader-image
      params:
        file: semver.uploader-image/version
  - name: create-uploader-pr
    plan:
    - in_parallel:
      - get: semver.uploader-image
        trigger: true
        passed: [ build-uploader-image ]
      - get: docker-image.uploader-image
      - get: git.scf
        params:
          submodules: none
      - get: ci
    - task: create-scf-pr
      input_mapping: { semver: semver.uploader-image, docker_image: docker-image.uploader-image }
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: splatform/concourse-brats
        inputs:
          - name: semver
          - name: docker_image
          - name: ci
          - name: git.scf
        params:
          GITHUB_TOKEN: ((github-access-token))
          GITHUB_PRIVATE_KEY: |
            {{github-private-key}}
          GIT_MAIL: {{github-username}}
          GIT_USER: suse-cf-ci-bot
          IMAGE_TO_REPLACE: recipe-uploader
        run:
          path: ci/tasks/create-pr.sh
